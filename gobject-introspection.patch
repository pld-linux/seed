diff -ur seed-2.30.0/libseed/seed-closure.c seed-2.30.0.new/libseed/seed-closure.c
--- seed-2.30.0/libseed/seed-closure.c	2010-03-29 05:24:27.000000000 +0200
+++ seed-2.30.0.new/libseed/seed-closure.c	2010-07-22 20:32:46.310173356 +0200
@@ -97,30 +97,12 @@
 	case GI_TYPE_TAG_UINT32:
 	  arg->v_uint32 = *(guint32 *) args[i];
 	  break;
-	case GI_TYPE_TAG_LONG:
-	  arg->v_long = *(glong *) args[i];
-	  break;
 	case GI_TYPE_TAG_INT64:
 	  arg->v_int64 = *(gint64 *) args[i];
 	  break;
-	case GI_TYPE_TAG_ULONG:
-	  arg->v_ulong = *(gulong *) args[i];
-	  break;
 	case GI_TYPE_TAG_UINT64:
 	  arg->v_uint64 = *(guint64 *) args[i];
 	  break;
-	case GI_TYPE_TAG_INT:
-	  arg->v_int = *(gint *) args[i];
-	  break;
-	case GI_TYPE_TAG_SSIZE:
-	  arg->v_ssize = *(gssize *) args[i];
-	  break;
-	case GI_TYPE_TAG_SIZE:
-	  arg->v_size = *(gsize *) args[i];
-	  break;
-	case GI_TYPE_TAG_UINT:
-	  arg->v_uint = *(guint *) args[i];
-	  break;
 	case GI_TYPE_TAG_FLOAT:
 	  arg->v_float = *(gfloat *) args[i];
 	  break;
@@ -215,30 +197,12 @@
     case GI_TYPE_TAG_UINT32:
       *(guint32 *) result = return_arg.v_uint32;
       break;
-    case GI_TYPE_TAG_LONG:
-      *(glong *) result = return_arg.v_long;
-      break;
     case GI_TYPE_TAG_INT64:
       *(gint64 *) result = return_arg.v_int64;
       break;
-    case GI_TYPE_TAG_ULONG:
-      *(gulong *) result = return_arg.v_ulong;
-      break;
     case GI_TYPE_TAG_UINT64:
       *(guint64 *) result = return_arg.v_uint64;
       break;
-    case GI_TYPE_TAG_INT:
-      *(gint *) result = return_arg.v_int;
-      break;
-    case GI_TYPE_TAG_SSIZE:
-      *(gssize *) result = return_arg.v_ssize;
-      break;
-    case GI_TYPE_TAG_SIZE:
-      *(gsize *) result = return_arg.v_size;
-      break;
-    case GI_TYPE_TAG_UINT:
-      *(guint *) result = return_arg.v_uint;
-      break;
     case GI_TYPE_TAG_FLOAT:
       *(gfloat *) result = return_arg.v_float;
       break;
diff -ur seed-2.30.0/libseed/seed-types.c seed-2.30.0.new/libseed/seed-types.c
--- seed-2.30.0/libseed/seed-types.c	2010-03-29 05:24:27.000000000 +0200
+++ seed-2.30.0.new/libseed/seed-types.c	2010-07-22 20:35:25.450269459 +0200
@@ -366,23 +366,6 @@
 	*array_p = dblresult;
       }
       break;
-    case GI_TYPE_TAG_INT:
-      {
-	gint *intresult;
-
-	intresult = g_new0 (gint, length + 1);
-
-	for (i = 0; i < length; i++)
-	  {
-	    elem = JSObjectGetPropertyAtIndex (ctx,
-					       (JSObjectRef) array,
-					       i, exception);
-	    intresult[i] = seed_value_to_int (ctx, elem, exception);
-	  }
-
-	*array_p = intresult;
-      }
-      break;
     case GI_TYPE_TAG_UINT8:
       {
 	guint8 *guint8result;
@@ -492,30 +475,12 @@
     case GI_TYPE_TAG_UINT32:
       arg->v_uint32 = seed_value_to_uint (ctx, value, exception);
       break;
-    case GI_TYPE_TAG_LONG:
-      arg->v_long = seed_value_to_long (ctx, value, exception);
-      break;
     case GI_TYPE_TAG_INT64:
       arg->v_int64 = seed_value_to_int64 (ctx, value, exception);
       break;
-    case GI_TYPE_TAG_ULONG:
-      arg->v_ulong = seed_value_to_ulong (ctx, value, exception);
-      break;
     case GI_TYPE_TAG_UINT64:
       arg->v_uint64 = seed_value_to_uint64 (ctx, value, exception);
       break;
-    case GI_TYPE_TAG_INT:
-      arg->v_int = seed_value_to_int (ctx, value, exception);
-      break;
-    case GI_TYPE_TAG_UINT:
-      arg->v_uint = seed_value_to_uint (ctx, value, exception);
-      break;
-    case GI_TYPE_TAG_SIZE:
-      arg->v_size = seed_value_to_size (ctx, value, exception);
-      break;
-    case GI_TYPE_TAG_SSIZE:
-      arg->v_ssize = seed_value_to_ssize (ctx, value, exception);
-      break;
     case GI_TYPE_TAG_FLOAT:
       arg->v_float = seed_value_to_float (ctx, value, exception);
       break;
@@ -531,9 +496,6 @@
     case GI_TYPE_TAG_GTYPE:
       arg->v_int = seed_value_to_int (ctx, value, exception);
       break;
-    case GI_TYPE_TAG_TIME_T:
-      arg->v_long = seed_value_to_time_t (ctx, value, exception);
-      break;
     case GI_TYPE_TAG_INTERFACE:
       {
 	GIBaseInfo *interface;
@@ -774,22 +736,10 @@
       return seed_value_from_int (ctx, arg->v_int32, exception);
     case GI_TYPE_TAG_UINT32:
       return seed_value_from_uint (ctx, arg->v_uint32, exception);
-    case GI_TYPE_TAG_LONG:
-      return seed_value_from_long (ctx, arg->v_long, exception);
     case GI_TYPE_TAG_INT64:
       return seed_value_from_int64 (ctx, arg->v_int64, exception);
-    case GI_TYPE_TAG_ULONG:
-      return seed_value_from_ulong (ctx, arg->v_ulong, exception);
     case GI_TYPE_TAG_UINT64:
       return seed_value_from_uint64 (ctx, arg->v_uint64, exception);
-    case GI_TYPE_TAG_INT:
-      return seed_value_from_int (ctx, arg->v_int32, exception);
-    case GI_TYPE_TAG_UINT:
-      return seed_value_from_uint (ctx, arg->v_uint32, exception);
-    case GI_TYPE_TAG_SSIZE:
-      return seed_value_from_ssize (ctx, arg->v_ssize, exception);
-    case GI_TYPE_TAG_SIZE:
-      return seed_value_from_size (ctx, arg->v_size, exception);
     case GI_TYPE_TAG_FLOAT:
       return seed_value_from_float (ctx, arg->v_float, exception);
     case GI_TYPE_TAG_DOUBLE:
@@ -800,8 +750,6 @@
       return seed_value_from_filename (ctx, arg->v_string, exception);
     case GI_TYPE_TAG_GTYPE:
       return seed_value_from_int (ctx, arg->v_int, exception);
-    case GI_TYPE_TAG_TIME_T:
-      return seed_value_from_time_t (ctx, arg->v_long, exception);
     case GI_TYPE_TAG_ARRAY:
       {
 	GITypeInfo *param_type;
@@ -933,8 +881,6 @@
       return seed_value_from_char (ctx, g_value_get_char (gval), exception);
     case G_TYPE_UCHAR:
       return seed_value_from_uchar (ctx, g_value_get_uchar (gval), exception);
-    case G_TYPE_INT:
-      return seed_value_from_int (ctx, g_value_get_int (gval), exception);
     case G_TYPE_UINT:
       return seed_value_from_uint (ctx, g_value_get_uint (gval), exception);
     case G_TYPE_LONG:
@@ -1111,16 +1057,6 @@
 							 val, exception));
 	return TRUE;
       }
-    case G_TYPE_INT:
-    case G_TYPE_UINT:
-      {
-	g_value_init (ret, type);
-	if (type == G_TYPE_INT)
-	  g_value_set_int (ret, seed_value_to_int (ctx, val, exception));
-	else
-	  g_value_set_uint (ret, seed_value_to_uint (ctx, val, exception));
-	return TRUE;
-      }
     case G_TYPE_CHAR:
       {
 	g_value_init (ret, G_TYPE_CHAR);
@@ -1133,8 +1069,6 @@
 	g_value_set_uchar (ret, seed_value_to_uchar (ctx, val, exception));
 	return TRUE;
       }
-    case G_TYPE_LONG:
-    case G_TYPE_ULONG:
     case G_TYPE_INT64:
     case G_TYPE_UINT64:
     case G_TYPE_FLOAT:
